module.exports = {
  configs: {
    typescript: {
      parser: '@typescript-eslint/parser',
      plugins: [
        '@typescript-eslint',
        'simple-import-sort',
      ],
      extends: [
        'eslint:recommended',
        'plugin:@typescript-eslint/recommended',
      ],
      rules: {
        '@typescript-eslint/array-type': ['error', {
          default: 'array',
          readonly: 'generic',
        }],
        '@typescript-eslint/consistent-type-assertions': ['error', {
          assertionStyle: 'as',
          objectLiteralTypeAssertions: 'never',
        }],
        '@typescript-eslint/consistent-type-definitions': ['error',
          'interface',
        ],
        '@typescript-eslint/explicit-function-return-type': 'error',
        '@typescript-eslint/member-delimiter-style': 'error',
        '@typescript-eslint/no-explicit-any': 'off',
        '@typescript-eslint/no-misused-new': 'error',
        '@typescript-eslint/no-this-alias': 'error',
        '@typescript-eslint/no-unused-vars': ['error', {
          argsIgnorePattern: '^_',
          caughtErrors: 'all',
          caughtErrorsIgnorePattern: '^_',
          varsIgnorePattern: '^_',
        }],
        '@typescript-eslint/no-use-before-define': 'off',
        '@typescript-eslint/no-useless-constructor': 'error',
        '@typescript-eslint/prefer-function-type': 'error',
        '@typescript-eslint/prefer-optional-chain': 'error',
        '@typescript-eslint/quotes': ['error', 'single'],
        '@typescript-eslint/semi': 'error',
        '@typescript-eslint/unified-signatures': 'error',
        'arrow-parens': 'error',
        'consistent-return': 'error',
        'comma-dangle': ['error', {
          'arrays': 'always-multiline',
          'objects': 'always-multiline',
          'imports': 'always-multiline',
          'exports': 'always-multiline',
          'functions': 'never',
        }],
        'curly': 'error',
        'default-case-last': 'error',
        'default-param-last': 'error',
        'dot-location': ['error', 'property'],
        'dot-notation': 'off', // https://234.fyi/1PcbRPGcR
        'eqeqeq': ['error', 'smart'],
        'max-len': ['error', {
          ignorePattern: 'eslint-disable',
          ignoreTrailingComments: true,
          ignoreUrls: true,
        }],
        'no-alert': 'error',
        'no-caller': 'error',
        'no-constructor-return': 'error',
        'no-duplicate-imports': 'error',
        'no-else-return': 'error',
        'no-eq-null': 'error',
        'no-eval': 'error',
        'no-extra-bind': 'error',
        'no-extra-label': 'error',
        'no-implicit-globals': 'error',
        'no-implied-eval': 'error',
        'no-label-var': 'error',
        'no-loss-of-precision': 'error',
        'no-multi-spaces': 'error',
        'no-new-wrappers': 'error',
        'no-promise-executor-return': 'error',
        'no-restricted-globals': [
          // https://github.com/microsoft/TypeScript/issues/18433
          'error',
          'closed',
          'event',
          'fdescribe',
          'length',
          'location',
          'name',
          'parent',
          'top',
        ],
        'no-self-compare': 'error',
        'no-sequences': 'error',
        'no-tabs': 'error',
        'no-throw-literal': 'error',
        'no-trailing-spaces': 'error',
        'no-undef-init': 'error',
        'no-unneeded-ternary': ['error', {defaultAssignment: false}],
        'no-unused-expressions': 'error',
        'no-useless-call': 'error',
        'no-useless-computed-key': 'error',
        'no-useless-rename': 'error',
        'no-var': 'error',
        'no-whitespace-before-property': 'error',
        'object-shorthand': ['error', 'always', {avoidQuotes: true}],
        'prefer-const': 'error',
        'radix': 'error',
        'require-await': 'error',
        'simple-import-sort/exports': 'error',
        'simple-import-sort/imports': 'error',
        'sort-imports': 'off',
      },
      overrides: [
        {
          files: ['**/test/**/*.ts'],
          rules: {
            '@typescript-eslint/explicit-function-return-type': 'off',
            '@typescript-eslint/no-non-null-assertion': 'off',
          }
        },
      ],
    },
  },
};
